@{
  Layout = "_Layout";
}

@model Bakery.Models.Treat

@if (User.Identity.IsAuthenticated)
{
  <nav id="navbar">
    <button>Signed in as @User.Identity.Name.
      @using (Html.BeginForm("LogOff", "Account"))
      {
        <input type="submit" class="btn btn-danger" value="Log out" />
      }
    </button>
  </nav>
  <hr>
}
else
{
  <nav id="navbar">
    <button>Not signed in.
      @using (Html.BeginForm("Index", "Account"))
      {
        <input type="submit" class="btn btn-primary" value="Log in" />
      }
    </button>
  </nav>
  <hr>
}

<h2>Treat Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.TreatName): @Html.DisplayFor(model => model.TreatName)</h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This treat is not associated with any flavors yet.</p>
}
else
{
  <h4>Flavors for this treat:</h4>
  <ul>
  @foreach(var join in Model.JoinEntities)
  {
    <li>@Html.ActionLink($"{join.Flavor.FlavorName}", "Details", "Flavors", new { id = join.Flavor.FlavorId }, null)</li>
    @using (Html.BeginForm("DeleteFlavor", "Treats"))
    {
      @Html.Hidden("joinId", @join.FlavorTreatId)
      <input type="submit" value="Delete"/>
    }
  }
  </ul>
}

<div id="footer">
  <button  class="bottom">@Html.ActionLink("Back to list", "Index")</button>
  <button  class="bottom">@Html.ActionLink("Add an Flavor", "AddFlavor", new { id = Model.TreatId })</button>
  <button  class="bottom">@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId })</button>
  <button  class="bottom">@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</button>
</div>